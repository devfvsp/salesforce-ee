language: java
services:
  - docker
addons:
  artifacts:
    # if would like to download artifacts ,travis-ci recommend to upload the remote location like aws s3
    # set enviroment variable in travis-ci
    # ARTIFACTS_KEY=(AWS access key id)
    # ARTIFACTS_SECRET=(AWS secret access key)
    # ARTIFACTS_BUCKET=(S3 bucket name)
    # For more information configuration for this ,please refer https://docs.travis-ci.com/user/uploading-artifacts/
    # this example is store to local hard disk travis-ci
    target_paths: report/*
    debug: true
jobs:
  include:
    - stage: "Test"
      name: "Run Test and report"
      script:
        - export CWD=$(pwd)
        - cd ../
        - git clone https://$STOREFRONT_TOKEN@github.com/SalesforceCommerceCloud/storefront-reference-architecture.git
        - cd ./storefront-reference-architecture
        - git checkout v4.0.0
        - npm install
        - npm run compile:scss
        - npm run compile:js
        - npm run compile:fonts
        - #Clone reference architecture first for right base paths in package.json
        - cd $CWD
        - npm install
        - npm run compile:js
        - npm run compile:scss
        - cd ../
        - git clone https://$STOREFRONT_TOKEN@github.com/SalesforceCommerceCloud/sitegenesis.git
        - cd sitegenesis
        - git checkout v104.1.2
        - #BEGIN fix for npm install
        - npm install --save "git://github.com/jfhbrook/node-ecstatic.git#39f21cdf1998e6169f127874f97fd9dc9efcfacc"
        - #END fix for npm install
        - npm install
        - npm install -g gulp
        - #Copy modified scripts
        - cp -r ../salesforce-ee/cartridges/app_storefront_controllers/ ./app_storefront_controllers/
        - cp -r ../salesforce-ee/cartridges/app_storefront_core/ ./app_storefront_core/
        - gulp build
        - find -maxdepth 0 -type d -exec cp -r {} "../storefront-reference-architecture/cartridges/" \;
        - if test -d $CWD/cartridges; then find $CWD/cartridges -maxdepth 0 -type d -exec cp -r {} "$CWD/../storefront-reference-architecture/" \;; fi
        - cd ../storefront-reference-architecture/cartridges/
        - ls -lsa
        - find {app_*,int_*,modules} -maxdepth 0 -type d -exec node ../node_modules/.bin/dwupload --cartridge {} --username $SFCC_USER --password $SFCC_PASSWORD --hostname $SANDBOX_URL \;
        - docker pull katalonstudio/katalon
        - docker run -t --rm -v "${CWD}/test":/katalon/katalon/source/ katalonstudio/katalon katalon-execute.sh -browserType="Remote" -remoteWebDriverUrl="https://${BROWSERSTACK_USER}:${BROWSERSTACK_ACCESS_KEY}@hub-cloud.browserstack.com/wd/hub" -executionProfile="ci_console" -g_SiteURL="$SANDBOX_URL" -retry=0 -statusDelay=15 -testSuitePath="Test Suites/Slot"
